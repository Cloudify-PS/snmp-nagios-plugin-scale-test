tosca_definitions_version: cloudify_dsl_1_3

description: >
  The SNMPv2c request test

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3.2/types.yaml
  - plugin:cloudify-openstack-plugin
  - plugin:cloudify-utilities-plugin
  - plugin:cloudify-nagiosrest-plugin
  - types/snmp_sim.yaml

inputs:

  proxy_blueprint:
    type: string

  proxy_deployment:
    type: string

  instances:
    type: integer
    description: Number of SNMP instances. Not more then number of ips
    default: 1

dsl_definitions:
  openstack_config: &openstack_config
    username: { get_secret: keystone_username }
    password: { get_secret: keystone_password }
    tenant_name: { get_secret: keystone_tenant_name }
    auth_url: { get_secret: keystone_url }
    region: { get_secret: region }

node_templates:

  snmp_simulation:
    type: snmp_sim
    capabilities:
      scalable:
        properties:
          default_instances: { get_input: instances}
    properties:
      nagiosrest_monitoring:
        target_type: vnf_fake_type_2
        heal_on_failure: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            ips_file: { get_attribute: [ proxy_host, deployment, outputs, ips_file ] }
        start:
          implementation: scripts/snmpv2c_request_start.sh
          inputs:
            user: { get_attribute: [ proxy_host, deployment, outputs, agent_user ] }
        detete:
          inputs:
            ips_file: { get_attribute: [ proxy_host, deployment, outputs, ips_file ] }
    relationships:
      - type: cloudify.relationships.contained_in
        target: snmpv2c_test_host


  snmpv2c_test_host:
    type: cloudify.openstack.nodes.Server
    properties:
      use_external_resource: true
      resource_id: { get_attribute: [ proxy_host, deployment, outputs, instance_id ] }
      agent_config:
        user: { get_attribute: [proxy_host, deployment, outputs, agent_user] }
        install_method: remote
        port: 22
        key: { get_secret: agent_key_private }
      server:
        key_name: { get_attribute: [proxy_host, deployment, outputs, key_name] }
      openstack_config: *openstack_config
    relationships:
      - type: cloudify.relationships.depends_on
        target: proxy_host


  proxy_host:
    type: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        blueprint:
          external_resource: true
          id: { get_input: proxy_blueprint }
        deployment:
          external_resource: true
          id: { get_input: proxy_deployment }
          outputs:
            instance_id: instance_id
            agent_user: agent_user
            key_name: key_name
            ips_file: ips_file
